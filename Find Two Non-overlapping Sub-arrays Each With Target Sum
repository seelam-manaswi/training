class Solution {
    public int minSumOfLengths(int[] arr, int target) {
        Map<Integer, Integer> map = new HashMap<>();
        map.put(0, -1);
        int sum = 0;
        for(int i = 0; i < arr.length; i++) {
            sum += arr[i];
            map.put(sum, i);
        }
        int ans = Integer.MAX_VALUE;
        sum = 0;
        
        int leftBest = Integer.MAX_VALUE;
        for(int i = 0; i < arr.length; i++) {
            sum += arr[i];
            if(map.containsKey(sum - target)) {
                leftBest = Math.min(leftBest, i - map.get(sum - target));
            }
            if(leftBest < Integer.MAX_VALUE && map.containsKey(sum + target)) {
                ans = Math.min(ans, leftBest + map.get(sum + target) - i);
            }
        }
        return ans < Integer.MAX_VALUE ? ans : -1;
    }
}
